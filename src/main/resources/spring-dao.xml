<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd">
    <!--引入properties文件-->
    <context:property-placeholder location="classpath:db.properties"/>
    <!--扫描注解-->
    <context:component-scan base-package="com.iths"/>
    <!--配置数据源-->
    <bean id="DataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
    </bean>
<!--Mybatis配置-->
    <!--配置工厂-->
    <bean id="sessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据源-->
        <property name="dataSource" ref="DataSource"/>
        <!--类型别名包-->
        <property name="typeAliasesPackage" value="com.iths.pojo"/>
        <!--映射文件-->
        <property name="mapperLocations">
            <value>classpath:com/iths/dao/IEmployeeDao.xml</value>
        </property>
    </bean>
    <!--扫描接口包路径，生成包下所有接口的代理对象，并存入应用上下文-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sessionFactoryBean"/>
        <property name="basePackage" value="com.iths.dao"/>
    </bean>

    <!--操作日期转换-->
    <bean id="simpleDateFormat" class="java.text.SimpleDateFormat">
        <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm"/>
    </bean>
<!--验证码-->
    <bean id="dateConversionUtils" class="com.iths.utils.DateConversionUtils">
        <property name="simpleDateFormat" ref="simpleDateFormat"/>
    </bean>
    <!--异常处理-->
    <bean id="handlerExceptionResolver" class="com.iths.extend.intercept.CustomExceptionResolver"></bean>

</beans>